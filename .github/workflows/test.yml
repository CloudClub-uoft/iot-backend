# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  pull_request:
    branches: [ staging ]
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_KEY }}
  BUCKET_NAME: ${{ secrets.BUCKET_NAME }}

  URI_MONGO: mongodb://mongodb:27017

  DB_HOST: mysql
  DB_USER: root
  DB_PASS:
  DB_NAME: test
  DB_PORT: 3306

  JWT_KEY: test

jobs:
  node-v14-test:
    runs-on: ubuntu-latest
    container: node:14-alpine

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        options: --health-cmd="mongo" --health-interval=5s --health-timeout=2s --health-retries=3
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: true
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
    - name: Setup MySQL
      run: |
        apk update
        apk add mysql mysql-client
        mysql -h 'mysql' -e 'CREATE TABLE test.logins (id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, `first-name` TEXT NOT NULL, `last-name` TEXT NOT NULL,  email TEXT NOT NULL, password TEXT NOT NULL);'
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: Install git
      run: apk add --no-cache git
    - name: Configure HTTP clone  
      run: git config --global url."https://github.com/".insteadOf ssh://git@github.com/
    - name: Install dependencies
      run: npm ci
    - name: Run test
      run: npm test
    - name: Run ESLint
      run: npm run eslint

  node-v16-test:
    runs-on: ubuntu-latest
    container: node:16-alpine

    services:
      mongodb:
        image: mongo
        ports:
          - 27017:27017
        options: --health-cmd="mongo" --health-interval=5s --health-timeout=2s --health-retries=3
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3

    steps:
    - name: Setup MySQL
      run: |
        apk update
        apk add mysql mysql-client
        mysql -h 'mysql' -e 'CREATE TABLE test.logins (id INT NOT NULL AUTO_INCREMENT PRIMARY KEY, `first-name` TEXT NOT NULL, `last-name` TEXT NOT NULL,  email TEXT NOT NULL, password TEXT NOT NULL);'
    - uses: actions/checkout@v2
      with:
        persist-credentials: false
    - name: Install dependencies
      run: npm ci
    - name: Run test
      run: npm test
    - name: Run ESLint
      run: npm run eslint
